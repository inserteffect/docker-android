name: Deployment

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"

  pull_request:
    branches:
      - master
    paths-ignore:
      - ".github/**"

env:
  IMAGE_PREFIX: android-

jobs:
  getChangedImageTags:
    runs-on: ubuntu-latest
    outputs:
      changedImageTags: ${{ steps.filter.outputs.filteredPaths }}

    steps:
      - uses: actions/checkout@v2

      - id: files
        name: Get changed files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "json"

      - id: filter
        name: Filter files
        uses: inserteffect/github-actions-filter-changed-file-paths@v1.0
        with:
          changedFiles: ${{ steps.files.outputs.all }}
          depth: 2

  uploadPackage:
    needs: getChangedImageTags
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      max-parallel: 1
      matrix:
        changedImageTags: ${{ fromJSON(needs.getChangedImageTags.outputs.changedImageTags) }}

    steps:
      - uses: actions/checkout@v2

      - id: image
        name: Set image
        run: |
          image_tag=${{ matrix.changedImageTags }}
          image=${image_tag%%/*}
          release=${image_tag##*/}
          echo "##[set-output name=image;]$(echo ${image})"
          echo "##[set-output name=release;]$(echo ${release})"

      - name: Build image
        run: |
          docker build \
          --build-arg VERSION=${{steps.image.outputs.release}} \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --build-arg VCS_REF=$(git rev-parse --short HEAD) \
          -t ${{env.IMAGE_PREFIX}}${{steps.image.outputs.image}} ./${{steps.image.outputs.image}}/${{steps.image.outputs.release}}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{env.IMAGE_PREFIX}}${{steps.image.outputs.image}}
          VERSION=${{steps.image.outputs.release}}
          docker tag ${{env.IMAGE_PREFIX}}${{steps.image.outputs.image}} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
